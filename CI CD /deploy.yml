name: CI/CD Pipeline for Wisecow

# Trigger the workflow on a push to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  # Job to build and push the Docker image
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Log in to Docker Hub (or other container registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push the Docker image to the registry
      - name: Build and push Docker image
        run: |
          docker build -t your-docker-registry/wisecow:latest .
          docker push your-docker-registry/wisecow:latest

  # Job to deploy the application to Kubernetes
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Set up kubectl (Kubernetes CLI) in GitHub Actions
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      # Step 2: Authenticate to the Kubernetes cluster (for GKE, EKS, AKS, or local cluster)
      - name: Authenticate to cluster
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 --decode > ~/.kube/config

      # Step 3: Deploy the Kubernetes manifests (deployment, service, ingress)
      - name: Deploy Wisecow app to Kubernetes
        run: |
          kubectl apply -f k8s/wisecow-deployment.yaml
          kubectl apply -f k8s/wisecow-service.yaml
          kubectl apply -f k8s/wisecow-ingress.yaml

      # Step 4: Check the rollout status of the deployment
      - name: Check deployment status
        run: |
          kubectl rollout status deployment/wisecow-deployment
